#!/bin/bash

# =======================================================
# Open edX Setup Script
# Script c√†i ƒë·∫∑t v√† kh·ªüi ch·∫°y Open edX v·ªõi Tutor
# =======================================================

set -e  # Exit on any error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo "üöÄ B·∫Øt ƒë·∫ßu setup Open edX..."

# =======================================================
# MENU CH·ªåN PH·∫¶N
# =======================================================

show_menu() {
    echo ""
    echo "=============================================="
    echo "üìã MENU CH·ªåN PH·∫¶N C√ÄI ƒê·∫∂T"
    echo "=============================================="
    echo "1. Ph·∫ßn 1: C√†i ƒë·∫∑t c∆° b·∫£n"
    echo "   - T·∫°o virtual environment"
    echo "   - C√†i ƒë·∫∑t Tutor[full]"
    echo "   - C√†i ƒë·∫∑t g√≥i h·ªá th·ªëng"
    echo "   - Kh·ªüi ch·∫°y Open edX"
    echo ""
    echo "2. Ph·∫ßn 2: C·∫•u h√¨nh mounts v√† dev"
    echo "   - Th√™m mounts cho edx-platform"
    echo "   - Th√™m mounts cho frontend apps"
    echo "   - Kh·ªüi ƒë·ªông dev environment"
    echo ""
    echo "3. Ch·∫°y t·∫•t c·∫£ (Ph·∫ßn 1 + Ph·∫ßn 2)"
    echo ""
    echo "4. Tho√°t"
    echo "=============================================="
}

# Kh·ªüi t·∫°o bi·∫øn
PART1_COMPLETED=false
PART2_COMPLETED=false

while true; do
    show_menu
    read -p "Ch·ªçn ph·∫ßn b·∫°n mu·ªën th·ª±c hi·ªán (1-4): " -n 1 -r
    echo ""
    
    case $REPLY in
        1)
            echo ""
            print_status "PH·∫¶N 1: C√†i ƒë·∫∑t c∆° b·∫£n"
            echo ""
            
            # Ki·ªÉm tra xem ƒë√£ ch·∫°y ph·∫ßn 1 ch∆∞a
            if [[ $PART1_COMPLETED == true ]]; then
                print_warning "Ph·∫ßn 1 ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán tr∆∞·ªõc ƒë√≥!"
                read -p "B·∫°n c√≥ mu·ªën ch·∫°y l·∫°i kh√¥ng? (y/n): " -n 1 -r
                echo ""
                if [[ ! $REPLY =~ ^[Yy]$ ]]; then
                    continue
                fi
            fi
    # =======================================================
    # B∆Ø·ªöC 1: T·∫†O VIRTUAL ENVIRONMENT
    # =======================================================
    
    print_status "T·∫°o virtual environment..."
    
    # X√≥a virtual environment c≈© n·∫øu t·ªìn t·∫°i
    if [ -d "env" ]; then
        print_status "X√≥a virtual environment c≈©..."
        rm -rf env/
    fi
    
    # T·∫°o virtual environment m·ªõi
    python3 -m venv env
    print_success "ƒê√£ t·∫°o virtual environment"
    
    # =======================================================
    # B∆Ø·ªöC 2: K√çCH HO·∫†T VIRTUAL ENVIRONMENT
    # =======================================================
    
    print_status "K√≠ch ho·∫°t virtual environment..."
    source env/bin/activate
    print_success "ƒê√£ k√≠ch ho·∫°t virtual environment"
    
    # =======================================================
    # B∆Ø·ªöC 3: C√ÄI ƒê·∫∂T TUTOR
    # =======================================================
    
    print_status "C√†i ƒë·∫∑t Tutor v·ªõi ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng..."
    pip install "tutor[full]"
    print_success "ƒê√£ c√†i ƒë·∫∑t Tutor"
    
    # =======================================================
    # B∆Ø·ªöC 4: C√ÄI ƒê·∫∂T C√ÅC G√ìI H·ªÜ TH·ªêNG
    # =======================================================
    
    print_status "C√†i ƒë·∫∑t c√°c g√≥i h·ªá th·ªëng c·∫ßn thi·∫øt..."
    sudo apt install -y python3 python3-pip libyaml-dev
    print_success "ƒê√£ c√†i ƒë·∫∑t c√°c g√≥i h·ªá th·ªëng"
    
            PART1_COMPLETED=true
            print_success "Ph·∫ßn 1 ho√†n th√†nh!"
            ;;
        2)
            echo ""
            print_status "PH·∫¶N 2: C·∫•u h√¨nh mounts"
            echo ""
            
            # Ki·ªÉm tra xem ƒë√£ ch·∫°y ph·∫ßn 2 ch∆∞a
            if [[ $PART2_COMPLETED == true ]]; then
                print_warning "Ph·∫ßn 2 ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán tr∆∞·ªõc ƒë√≥!"
                read -p "B·∫°n c√≥ mu·ªën ch·∫°y l·∫°i kh√¥ng? (y/n): " -n 1 -r
                echo ""
                if [[ ! $REPLY =~ ^[Yy]$ ]]; then
                    continue
                fi
            fi
            
            # Ki·ªÉm tra xem ƒë√£ c√≥ virtual environment ch∆∞a
            if [[ $PART1_COMPLETED == false ]] && [ ! -d "env" ]; then
                print_error "C·∫ßn ch·∫°y Ph·∫ßn 1 tr∆∞·ªõc ho·∫∑c c√≥ virtual environment!"
                continue
            fi
            
            # K√≠ch ho·∫°t virtual environment n·∫øu ch∆∞a
            if [[ $PART1_COMPLETED == false ]]; then
                print_status "K√≠ch ho·∫°t virtual environment hi·ªán c√≥..."
                source env/bin/activate
                print_success "ƒê√£ k√≠ch ho·∫°t virtual environment"
            fi
            
            print_status "ƒêang th√™m mounts cho development..."
            
            # Hi·ªÉn th·ªã danh s√°ch mounts hi·ªán t·∫°i
            print_status "Danh s√°ch mounts hi·ªán t·∫°i:"
            tutor mounts list
            
            # Th√™m c√°c mounts cho development
            print_status "Th√™m mount cho edx-platform..."
            tutor mounts add ../edx-platform
            
            print_status "Th√™m mount cho frontend-app-authn..."
            tutor mounts add ../frontend-app-authn
            
            print_status "Th√™m mount cho frontend-app-learner-dashboard..."
            tutor mounts add ../frontend-app-learner-dashboard
            
            print_status "Th√™m mount cho frontend-app-learning..."
            tutor mounts add ../frontend-app-learning
            
            # Hi·ªÉn th·ªã danh s√°ch mounts sau khi th√™m
            print_status "Danh s√°ch mounts sau khi th√™m:"
            tutor mounts list
            
            print_success "ƒê√£ th√™m t·∫•t c·∫£ mounts th√†nh c√¥ng!"
            
            print_status "Kh·ªüi ƒë·ªông l·∫°i services v·ªõi mounts m·ªõi..."
            tutor dev stop
            tutor dev launch
            
            print_status "D·ª´ng services ƒë·ªÉ c·∫•u h√¨nh..."
            tutor dev stop
            
            print_status "Kh·ªüi ƒë·ªông services ·ªü ch·∫ø ƒë·ªô detached..."
            tutor dev start -d
            
            PART2_COMPLETED=true
            print_success "Ph·∫ßn 2 ho√†n th√†nh!"
            ;;
        3)
            echo ""
            print_status "CH·∫†Y T·∫§T C·∫¢ (Ph·∫ßn 1 + Ph·∫ßn 2)"
            echo ""
            
            # Ch·∫°y ph·∫ßn 1
            if [[ $PART1_COMPLETED == false ]]; then
                print_status "Th·ª±c hi·ªán Ph·∫ßn 1..."
                # Copy code ph·∫ßn 1 v√†o ƒë√¢y
                # =======================================================
                # B∆Ø·ªöC 1: T·∫†O VIRTUAL ENVIRONMENT
                # =======================================================
                
                print_status "T·∫°o virtual environment..."
                
                # X√≥a virtual environment c≈© n·∫øu t·ªìn t·∫°i
                if [ -d "env" ]; then
                    print_status "X√≥a virtual environment c≈©..."
                    rm -rf env/
                fi
                
                # T·∫°o virtual environment m·ªõi
                python3 -m venv env
                print_success "ƒê√£ t·∫°o virtual environment"
                
                # =======================================================
                # B∆Ø·ªöC 2: K√çCH HO·∫†T VIRTUAL ENVIRONMENT
                # =======================================================
                
                print_status "K√≠ch ho·∫°t virtual environment..."
                source env/bin/activate
                print_success "ƒê√£ k√≠ch ho·∫°t virtual environment"
                
                # =======================================================
                # B∆Ø·ªöC 3: C√ÄI ƒê·∫∂T TUTOR
                # =======================================================
                
                print_status "C√†i ƒë·∫∑t Tutor v·ªõi ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng..."
                pip install "tutor[full]"
                print_success "ƒê√£ c√†i ƒë·∫∑t Tutor"
                
                # =======================================================
                # B∆Ø·ªöC 4: C√ÄI ƒê·∫∂T C√ÅC G√ìI H·ªÜ TH·ªêNG
                # =======================================================
                
                print_status "C√†i ƒë·∫∑t c√°c g√≥i h·ªá th·ªëng c·∫ßn thi·∫øt..."
                sudo apt install -y python3 python3-pip libyaml-dev
                print_success "ƒê√£ c√†i ƒë·∫∑t c√°c g√≥i h·ªá th·ªëng"
                
                # =======================================================
                # B∆Ø·ªöC 5: KH·ªûI CH·∫†Y OPEN EDX
                # =======================================================
                
                print_status "Kh·ªüi ch·∫°y Open edX..."
                tutor dev launch
                print_success "ƒê√£ kh·ªüi ch·∫°y Open edX"
                
                PART1_COMPLETED=true
            else
                print_warning "Ph·∫ßn 1 ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán tr∆∞·ªõc ƒë√≥"
            fi
            
            # Ch·∫°y ph·∫ßn 2
            if [[ $PART2_COMPLETED == false ]]; then
                print_status "Th·ª±c hi·ªán Ph·∫ßn 2..."
                
                print_status "ƒêang th√™m mounts cho development..."
                
                # Hi·ªÉn th·ªã danh s√°ch mounts hi·ªán t·∫°i
                print_status "Danh s√°ch mounts hi·ªán t·∫°i:"
                tutor mounts list
                
                # Th√™m c√°c mounts cho development
                print_status "Th√™m mount cho edx-platform..."
                tutor mounts add ../edx-platform
                
                print_status "Th√™m mount cho frontend-app-authn..."
                tutor mounts add ../frontend-app-authn
                
                print_status "Th√™m mount cho frontend-app-learner-dashboard..."
                tutor mounts add ../frontend-app-learner-dashboard
                
                print_status "Th√™m mount cho frontend-app-learning..."
                tutor mounts add ../frontend-app-learning
                
                # Hi·ªÉn th·ªã danh s√°ch mounts sau khi th√™m
                print_status "Danh s√°ch mounts sau khi th√™m:"
                tutor mounts list
                
                print_success "ƒê√£ th√™m t·∫•t c·∫£ mounts th√†nh c√¥ng!"
                
                print_status "Kh·ªüi ƒë·ªông l·∫°i services v·ªõi mounts m·ªõi..."
                tutor dev stop
                tutor dev launch
                
                print_status "D·ª´ng services ƒë·ªÉ c·∫•u h√¨nh..."
                tutor dev stop
                
                print_status "Kh·ªüi ƒë·ªông services ·ªü ch·∫ø ƒë·ªô detached..."
                tutor dev start -d
                
                PART2_COMPLETED=true
            else
                print_warning "Ph·∫ßn 2 ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán tr∆∞·ªõc ƒë√≥"
            fi
            
            print_success "T·∫•t c·∫£ c√°c ph·∫ßn ƒë√£ ho√†n th√†nh!"
            ;;
        4)
            print_status "Tho√°t script..."
            break
            ;;
        *)
            print_error "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng ch·ªçn 1-4."
            ;;
    esac
    
    # Hi·ªÉn th·ªã tr·∫°ng th√°i hi·ªán t·∫°i
    echo ""
    print_status "Tr·∫°ng th√°i hi·ªán t·∫°i:"
    if [[ $PART1_COMPLETED == true ]]; then
        echo "   ‚úÖ Ph·∫ßn 1: ƒê√£ ho√†n th√†nh"
    else
        echo "   ‚ùå Ph·∫ßn 1: Ch∆∞a th·ª±c hi·ªán"
    fi
    
    if [[ $PART2_COMPLETED == true ]]; then
        echo "   ‚úÖ Ph·∫ßn 2: ƒê√£ ho√†n th√†nh"
    else
        echo "   ‚ùå Ph·∫ßn 2: Ch∆∞a th·ª±c hi·ªán"
    fi
    echo ""
    
    # H·ªèi c√≥ mu·ªën ti·∫øp t·ª•c kh√¥ng
    read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c ho·∫∑c 'q' ƒë·ªÉ tho√°t: " -r
    if [[ $REPLY == "q" ]]; then
        break
    fi
done

# =======================================================
# HO√ÄN TH√ÄNH
# =======================================================

echo ""
echo "=============================================="
echo "üéâ SETUP OPEN EDX HO√ÄN T·∫§T!"
echo "=============================================="
echo ""
echo "üìã C√°c b∆∞·ªõc ƒë√£ th·ª±c hi·ªán:"
if [[ $PART1_COMPLETED == true ]]; then
    echo "   ‚úÖ T·∫°o virtual environment (env)"
    echo "   ‚úÖ K√≠ch ho·∫°t virtual environment"
    echo "   ‚úÖ C√†i ƒë·∫∑t Tutor[full]"
    echo "   ‚úÖ C√†i ƒë·∫∑t python3, python3-pip, libyaml-dev"
else
    echo "   ‚è≠Ô∏è  Ph·∫ßn 1: Ch∆∞a th·ª±c hi·ªán"
fi

if [[ $PART2_COMPLETED == true ]]; then
    echo "   ‚úÖ Th√™m mounts cho edx-platform"
    echo "   ‚úÖ Th√™m mounts cho frontend apps"
    echo "   ‚úÖ Kh·ªüi ƒë·ªông dev environment"
else
    echo "   ‚è≠Ô∏è  Ph·∫ßn 2: Ch∆∞a th·ª±c hi·ªán"
fi
echo ""
echo "üîç Ki·ªÉm tra tr·∫°ng th√°i:"
echo "   tutor dev status"
echo ""
echo "üìö Truy c·∫≠p Open edX:"
echo "   - LMS: http://local.overhang.io"
echo "   - Studio: http://studio.local.overhang.io"
echo ""
echo "üõ†Ô∏è  C√°c l·ªánh h·ªØu √≠ch:"
echo "   - Xem logs: tutor dev logs"
echo "   - D·ª´ng services: tutor dev stop"
echo "   - Kh·ªüi ƒë·ªông l·∫°i: tutor dev restart"
echo "   - Xem c·∫•u h√¨nh: tutor config printroot"
echo ""
if [[ $PART2_COMPLETED == true ]]; then
    echo "üìÅ Mounts ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh:"
    echo "   - EdX Platform: ../edx-platform"
    echo "   - Frontend Authn: ../frontend-app-authn"
    echo "   - Frontend Learner Dashboard: ../frontend-app-learner-dashboard"
    echo "   - Frontend Learning: ../frontend-app-learning"
fi
echo "=============================================="
